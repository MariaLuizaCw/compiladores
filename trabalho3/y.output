Terminals unused in grammar

    AND
    OR
    ME_IG
    MA_IG
    DIF


State 80 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: CMDs

    2 CMDs: CMDs CMD
    3     | %empty

    4 CMD: CMD_LET ';'
    5    | CMD_IF
    6    | PRINT E ';'
    7    | CMD_FOR
    8    | E ';'
    9    | '{' CMDs '}'

   10 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' CMD

   11 PRIM_E: CMD_LET
   12       | E

   13 CMD_LET: LET VARs

   14 VARs: VAR ',' VARs
   15     | VAR

   16 VAR: ID
   17    | ID '=' E
   18    | ID '=' '{' '}'

   19 CMD_IF: IF '(' E ')' CMD
   20       | IF '(' E ')' CMD ELSE CMD

   21 LVALUE: ID

   22 LVALUEPROP: E '[' E ']'
   23           | E '.' ID

   24 E: LVALUE '=' E
   25  | LVALUE '=' '{' '}'
   26  | LVALUEPROP '=' E
   27  | LVALUE MAIS_IGUAL E
   28  | LVALUEPROP MAIS_IGUAL E
   29  | E '<' E
   30  | E '>' E
   31  | E '+' E
   32  | E '-' E
   33  | E '*' E
   34  | E '/' E
   35  | E '%' E
   36  | E IGUAL E
   37  | LVALUE MAIS_MAIS
   38  | LVALUEPROP MAIS_MAIS
   39  | CDOUBLE
   40  | '[' ']'
   41  | CINT
   42  | CSTRING
   43  | LVALUE
   44  | LVALUEPROP
   45  | '(' E ')'


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 35
    '(' (40) 10 19 20 45
    ')' (41) 10 19 20 45
    '*' (42) 33
    '+' (43) 31
    ',' (44) 14
    '-' (45) 32
    '.' (46) 23
    '/' (47) 34
    ';' (59) 4 6 8 10
    '<' (60) 29
    '=' (61) 17 18 24 25 26
    '>' (62) 30
    '[' (91) 22 40
    ']' (93) 22 40
    '{' (123) 9 18 25
    '}' (125) 9 18 25
    error (256)
    ID (258) 16 17 18 21 23
    IF (259) 19 20
    ELSE (260) 20
    LET (261) 13
    PRINT (262) 6
    FOR (263) 10
    CDOUBLE (264) 39
    CSTRING (265) 42
    CINT (266) 41
    AND (267)
    OR (268)
    ME_IG (269)
    MA_IG (270)
    DIF (271)
    IGUAL (272) 36
    MAIS_IGUAL (273) 27 28
    MAIS_MAIS (274) 37 38


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    S (38)
        on left: 1
        on right: 0
    CMDs (39)
        on left: 2 3
        on right: 1 2 9
    CMD (40)
        on left: 4 5 6 7 8 9
        on right: 2 10 19 20
    CMD_FOR (41)
        on left: 10
        on right: 7
    PRIM_E (42)
        on left: 11 12
        on right: 10
    CMD_LET (43)
        on left: 13
        on right: 4 11
    VARs (44)
        on left: 14 15
        on right: 13 14
    VAR (45)
        on left: 16 17 18
        on right: 14 15
    CMD_IF (46)
        on left: 19 20
        on right: 5
    LVALUE (47)
        on left: 21
        on right: 24 25 27 37 43
    LVALUEPROP (48)
        on left: 22 23
        on right: 26 28 38 44
    E (49)
        on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
        on right: 6 8 10 12 17 19 20 22 23 24 26 27 28 29 30 31 32 33 34 35 36 45


State 0

    0 $accept: . S $end

    $default  reduce using rule 3 (CMDs)

    S     go to state 1
    CMDs  go to state 2


State 1

    0 $accept: S . $end

    $end  shift, and go to state 3


State 2

    1 S: CMDs .
    2 CMDs: CMDs . CMD

    ID       shift, and go to state 4
    IF       shift, and go to state 5
    LET      shift, and go to state 6
    PRINT    shift, and go to state 7
    FOR      shift, and go to state 8
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '{'      shift, and go to state 13
    '('      shift, and go to state 14

    $default  reduce using rule 1 (S)

    CMD         go to state 15
    CMD_FOR     go to state 16
    CMD_LET     go to state 17
    CMD_IF      go to state 18
    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 21


State 3

    0 $accept: S $end .

    $default  accept


State 4

   21 LVALUE: ID .

    $default  reduce using rule 21 (LVALUE)


State 5

   19 CMD_IF: IF . '(' E ')' CMD
   20       | IF . '(' E ')' CMD ELSE CMD

    '('  shift, and go to state 22


State 6

   13 CMD_LET: LET . VARs

    ID  shift, and go to state 23

    VARs  go to state 24
    VAR   go to state 25


State 7

    6 CMD: PRINT . E ';'

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 26


State 8

   10 CMD_FOR: FOR . '(' PRIM_E ';' E ';' E ')' CMD

    '('  shift, and go to state 27


State 9

   39 E: CDOUBLE .

    $default  reduce using rule 39 (E)


State 10

   42 E: CSTRING .

    $default  reduce using rule 42 (E)


State 11

   41 E: CINT .

    $default  reduce using rule 41 (E)


State 12

   40 E: '[' . ']'

    ']'  shift, and go to state 28


State 13

    9 CMD: '{' . CMDs '}'

    $default  reduce using rule 3 (CMDs)

    CMDs  go to state 29


State 14

   45 E: '(' . E ')'

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 30


State 15

    2 CMDs: CMDs CMD .

    $default  reduce using rule 2 (CMDs)


State 16

    7 CMD: CMD_FOR .

    $default  reduce using rule 7 (CMD)


State 17

    4 CMD: CMD_LET . ';'

    ';'  shift, and go to state 31


State 18

    5 CMD: CMD_IF .

    $default  reduce using rule 5 (CMD)


State 19

   24 E: LVALUE . '=' E
   25  | LVALUE . '=' '{' '}'
   27  | LVALUE . MAIS_IGUAL E
   37  | LVALUE . MAIS_MAIS
   43  | LVALUE .

    MAIS_IGUAL  shift, and go to state 32
    MAIS_MAIS   shift, and go to state 33
    '='         shift, and go to state 34

    $default  reduce using rule 43 (E)


State 20

   26 E: LVALUEPROP . '=' E
   28  | LVALUEPROP . MAIS_IGUAL E
   38  | LVALUEPROP . MAIS_MAIS
   44  | LVALUEPROP .

    MAIS_IGUAL  shift, and go to state 35
    MAIS_MAIS   shift, and go to state 36
    '='         shift, and go to state 37

    $default  reduce using rule 44 (E)


State 21

    8 CMD: E . ';'
   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   29 E: E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  shift, and go to state 38
    '<'    shift, and go to state 39
    '>'    shift, and go to state 40
    '+'    shift, and go to state 41
    '-'    shift, and go to state 42
    '*'    shift, and go to state 43
    '/'    shift, and go to state 44
    '%'    shift, and go to state 45
    '['    shift, and go to state 46
    '.'    shift, and go to state 47
    ';'    shift, and go to state 48


State 22

   19 CMD_IF: IF '(' . E ')' CMD
   20       | IF '(' . E ')' CMD ELSE CMD

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 49


State 23

   16 VAR: ID .
   17    | ID . '=' E
   18    | ID . '=' '{' '}'

    '='  shift, and go to state 50

    $default  reduce using rule 16 (VAR)


State 24

   13 CMD_LET: LET VARs .

    $default  reduce using rule 13 (CMD_LET)


State 25

   14 VARs: VAR . ',' VARs
   15     | VAR .

    ','  shift, and go to state 51

    $default  reduce using rule 15 (VARs)


State 26

    6 CMD: PRINT E . ';'
   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   29 E: E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  shift, and go to state 38
    '<'    shift, and go to state 39
    '>'    shift, and go to state 40
    '+'    shift, and go to state 41
    '-'    shift, and go to state 42
    '*'    shift, and go to state 43
    '/'    shift, and go to state 44
    '%'    shift, and go to state 45
    '['    shift, and go to state 46
    '.'    shift, and go to state 47
    ';'    shift, and go to state 52


State 27

   10 CMD_FOR: FOR '(' . PRIM_E ';' E ';' E ')' CMD

    ID       shift, and go to state 4
    LET      shift, and go to state 6
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    PRIM_E      go to state 53
    CMD_LET     go to state 54
    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 55


State 28

   40 E: '[' ']' .

    $default  reduce using rule 40 (E)


State 29

    2 CMDs: CMDs . CMD
    9 CMD: '{' CMDs . '}'

    ID       shift, and go to state 4
    IF       shift, and go to state 5
    LET      shift, and go to state 6
    PRINT    shift, and go to state 7
    FOR      shift, and go to state 8
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '{'      shift, and go to state 13
    '}'      shift, and go to state 56
    '('      shift, and go to state 14

    CMD         go to state 15
    CMD_FOR     go to state 16
    CMD_LET     go to state 17
    CMD_IF      go to state 18
    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 21


State 30

   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   29 E: E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E
   45  | '(' E . ')'

    IGUAL  shift, and go to state 38
    '<'    shift, and go to state 39
    '>'    shift, and go to state 40
    '+'    shift, and go to state 41
    '-'    shift, and go to state 42
    '*'    shift, and go to state 43
    '/'    shift, and go to state 44
    '%'    shift, and go to state 45
    '['    shift, and go to state 46
    '.'    shift, and go to state 47
    ')'    shift, and go to state 57


State 31

    4 CMD: CMD_LET ';' .

    $default  reduce using rule 4 (CMD)


State 32

   27 E: LVALUE MAIS_IGUAL . E

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 58


State 33

   37 E: LVALUE MAIS_MAIS .

    $default  reduce using rule 37 (E)


State 34

   24 E: LVALUE '=' . E
   25  | LVALUE '=' . '{' '}'

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '{'      shift, and go to state 59
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 60


State 35

   28 E: LVALUEPROP MAIS_IGUAL . E

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 61


State 36

   38 E: LVALUEPROP MAIS_MAIS .

    $default  reduce using rule 38 (E)


State 37

   26 E: LVALUEPROP '=' . E

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 62


State 38

   36 E: E IGUAL . E

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 63


State 39

   29 E: E '<' . E

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 64


State 40

   30 E: E '>' . E

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 65


State 41

   31 E: E '+' . E

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 66


State 42

   32 E: E '-' . E

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 67


State 43

   33 E: E '*' . E

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 68


State 44

   34 E: E '/' . E

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 69


State 45

   35 E: E '%' . E

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 70


State 46

   22 LVALUEPROP: E '[' . E ']'

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 71


State 47

   23 LVALUEPROP: E '.' . ID

    ID  shift, and go to state 72


State 48

    8 CMD: E ';' .

    $default  reduce using rule 8 (CMD)


State 49

   19 CMD_IF: IF '(' E . ')' CMD
   20       | IF '(' E . ')' CMD ELSE CMD
   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   29 E: E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  shift, and go to state 38
    '<'    shift, and go to state 39
    '>'    shift, and go to state 40
    '+'    shift, and go to state 41
    '-'    shift, and go to state 42
    '*'    shift, and go to state 43
    '/'    shift, and go to state 44
    '%'    shift, and go to state 45
    '['    shift, and go to state 46
    '.'    shift, and go to state 47
    ')'    shift, and go to state 73


State 50

   17 VAR: ID '=' . E
   18    | ID '=' . '{' '}'

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '{'      shift, and go to state 74
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 75


State 51

   14 VARs: VAR ',' . VARs

    ID  shift, and go to state 23

    VARs  go to state 76
    VAR   go to state 25


State 52

    6 CMD: PRINT E ';' .

    $default  reduce using rule 6 (CMD)


State 53

   10 CMD_FOR: FOR '(' PRIM_E . ';' E ';' E ')' CMD

    ';'  shift, and go to state 77


State 54

   11 PRIM_E: CMD_LET .

    $default  reduce using rule 11 (PRIM_E)


State 55

   12 PRIM_E: E .
   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   29 E: E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  shift, and go to state 38
    '<'    shift, and go to state 39
    '>'    shift, and go to state 40
    '+'    shift, and go to state 41
    '-'    shift, and go to state 42
    '*'    shift, and go to state 43
    '/'    shift, and go to state 44
    '%'    shift, and go to state 45
    '['    shift, and go to state 46
    '.'    shift, and go to state 47

    $default  reduce using rule 12 (PRIM_E)


State 56

    9 CMD: '{' CMDs '}' .

    $default  reduce using rule 9 (CMD)


State 57

   45 E: '(' E ')' .

    $default  reduce using rule 45 (E)


State 58

   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   27 E: LVALUE MAIS_IGUAL E .
   29  | E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  error (nonassociative)

    $default  reduce using rule 27 (E)


State 59

   25 E: LVALUE '=' '{' . '}'

    '}'  shift, and go to state 78


State 60

   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   24 E: LVALUE '=' E .
   29  | E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  shift, and go to state 38
    '<'    shift, and go to state 39
    '>'    shift, and go to state 40
    '+'    shift, and go to state 41
    '-'    shift, and go to state 42
    '*'    shift, and go to state 43
    '/'    shift, and go to state 44
    '%'    shift, and go to state 45
    '['    shift, and go to state 46
    '.'    shift, and go to state 47

    $default  reduce using rule 24 (E)


State 61

   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   28 E: LVALUEPROP MAIS_IGUAL E .
   29  | E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  error (nonassociative)

    $default  reduce using rule 28 (E)


State 62

   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   26 E: LVALUEPROP '=' E .
   29  | E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  shift, and go to state 38
    '<'    shift, and go to state 39
    '>'    shift, and go to state 40
    '+'    shift, and go to state 41
    '-'    shift, and go to state 42
    '*'    shift, and go to state 43
    '/'    shift, and go to state 44
    '%'    shift, and go to state 45
    '['    shift, and go to state 46
    '.'    shift, and go to state 47

    $default  reduce using rule 26 (E)


State 63

   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   29 E: E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E
   36  | E IGUAL E .

    IGUAL  error (nonassociative)

    $default  reduce using rule 36 (E)


State 64

   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   29 E: E . '<' E
   29  | E '<' E .
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  shift, and go to state 38
    '+'    shift, and go to state 41
    '-'    shift, and go to state 42
    '*'    shift, and go to state 43
    '/'    shift, and go to state 44
    '%'    shift, and go to state 45
    '['    shift, and go to state 46
    '.'    shift, and go to state 47

    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 29 (E)


State 65

   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   29 E: E . '<' E
   30  | E . '>' E
   30  | E '>' E .
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  shift, and go to state 38
    '+'    shift, and go to state 41
    '-'    shift, and go to state 42
    '*'    shift, and go to state 43
    '/'    shift, and go to state 44
    '%'    shift, and go to state 45
    '['    shift, and go to state 46
    '.'    shift, and go to state 47

    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 30 (E)


State 66

   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   29 E: E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   31  | E '+' E .
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  shift, and go to state 38
    '*'    shift, and go to state 43
    '/'    shift, and go to state 44
    '%'    shift, and go to state 45
    '['    shift, and go to state 46
    '.'    shift, and go to state 47

    $default  reduce using rule 31 (E)


State 67

   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   29 E: E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   32  | E '-' E .
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  shift, and go to state 38
    '*'    shift, and go to state 43
    '/'    shift, and go to state 44
    '%'    shift, and go to state 45
    '['    shift, and go to state 46
    '.'    shift, and go to state 47

    $default  reduce using rule 32 (E)


State 68

   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   29 E: E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   33  | E '*' E .
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  shift, and go to state 38
    '['    shift, and go to state 46
    '.'    shift, and go to state 47

    $default  reduce using rule 33 (E)


State 69

   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   29 E: E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   34  | E '/' E .
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  shift, and go to state 38
    '['    shift, and go to state 46
    '.'    shift, and go to state 47

    $default  reduce using rule 34 (E)


State 70

   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   29 E: E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   35  | E '%' E .
   36  | E . IGUAL E

    IGUAL  shift, and go to state 38
    '['    shift, and go to state 46
    '.'    shift, and go to state 47

    $default  reduce using rule 35 (E)


State 71

   22 LVALUEPROP: E . '[' E ']'
   22           | E '[' E . ']'
   23           | E . '.' ID
   29 E: E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  shift, and go to state 38
    '<'    shift, and go to state 39
    '>'    shift, and go to state 40
    '+'    shift, and go to state 41
    '-'    shift, and go to state 42
    '*'    shift, and go to state 43
    '/'    shift, and go to state 44
    '%'    shift, and go to state 45
    '['    shift, and go to state 46
    '.'    shift, and go to state 47
    ']'    shift, and go to state 79


State 72

   23 LVALUEPROP: E '.' ID .

    $default  reduce using rule 23 (LVALUEPROP)


State 73

   19 CMD_IF: IF '(' E ')' . CMD
   20       | IF '(' E ')' . CMD ELSE CMD

    ID       shift, and go to state 4
    IF       shift, and go to state 5
    LET      shift, and go to state 6
    PRINT    shift, and go to state 7
    FOR      shift, and go to state 8
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '{'      shift, and go to state 13
    '('      shift, and go to state 14

    CMD         go to state 80
    CMD_FOR     go to state 16
    CMD_LET     go to state 17
    CMD_IF      go to state 18
    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 21


State 74

   18 VAR: ID '=' '{' . '}'

    '}'  shift, and go to state 81


State 75

   17 VAR: ID '=' E .
   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   29 E: E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  shift, and go to state 38
    '<'    shift, and go to state 39
    '>'    shift, and go to state 40
    '+'    shift, and go to state 41
    '-'    shift, and go to state 42
    '*'    shift, and go to state 43
    '/'    shift, and go to state 44
    '%'    shift, and go to state 45
    '['    shift, and go to state 46
    '.'    shift, and go to state 47

    $default  reduce using rule 17 (VAR)


State 76

   14 VARs: VAR ',' VARs .

    $default  reduce using rule 14 (VARs)


State 77

   10 CMD_FOR: FOR '(' PRIM_E ';' . E ';' E ')' CMD

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 82


State 78

   25 E: LVALUE '=' '{' '}' .

    $default  reduce using rule 25 (E)


State 79

   22 LVALUEPROP: E '[' E ']' .

    $default  reduce using rule 22 (LVALUEPROP)


State 80

   19 CMD_IF: IF '(' E ')' CMD .
   20       | IF '(' E ')' CMD . ELSE CMD

    ELSE  shift, and go to state 83

    ELSE      [reduce using rule 19 (CMD_IF)]
    $default  reduce using rule 19 (CMD_IF)


State 81

   18 VAR: ID '=' '{' '}' .

    $default  reduce using rule 18 (VAR)


State 82

   10 CMD_FOR: FOR '(' PRIM_E ';' E . ';' E ')' CMD
   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   29 E: E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  shift, and go to state 38
    '<'    shift, and go to state 39
    '>'    shift, and go to state 40
    '+'    shift, and go to state 41
    '-'    shift, and go to state 42
    '*'    shift, and go to state 43
    '/'    shift, and go to state 44
    '%'    shift, and go to state 45
    '['    shift, and go to state 46
    '.'    shift, and go to state 47
    ';'    shift, and go to state 84


State 83

   20 CMD_IF: IF '(' E ')' CMD ELSE . CMD

    ID       shift, and go to state 4
    IF       shift, and go to state 5
    LET      shift, and go to state 6
    PRINT    shift, and go to state 7
    FOR      shift, and go to state 8
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '{'      shift, and go to state 13
    '('      shift, and go to state 14

    CMD         go to state 85
    CMD_FOR     go to state 16
    CMD_LET     go to state 17
    CMD_IF      go to state 18
    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 21


State 84

   10 CMD_FOR: FOR '(' PRIM_E ';' E ';' . E ')' CMD

    ID       shift, and go to state 4
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '('      shift, and go to state 14

    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 86


State 85

   20 CMD_IF: IF '(' E ')' CMD ELSE CMD .

    $default  reduce using rule 20 (CMD_IF)


State 86

   10 CMD_FOR: FOR '(' PRIM_E ';' E ';' E . ')' CMD
   22 LVALUEPROP: E . '[' E ']'
   23           | E . '.' ID
   29 E: E . '<' E
   30  | E . '>' E
   31  | E . '+' E
   32  | E . '-' E
   33  | E . '*' E
   34  | E . '/' E
   35  | E . '%' E
   36  | E . IGUAL E

    IGUAL  shift, and go to state 38
    '<'    shift, and go to state 39
    '>'    shift, and go to state 40
    '+'    shift, and go to state 41
    '-'    shift, and go to state 42
    '*'    shift, and go to state 43
    '/'    shift, and go to state 44
    '%'    shift, and go to state 45
    '['    shift, and go to state 46
    '.'    shift, and go to state 47
    ')'    shift, and go to state 87


State 87

   10 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' . CMD

    ID       shift, and go to state 4
    IF       shift, and go to state 5
    LET      shift, and go to state 6
    PRINT    shift, and go to state 7
    FOR      shift, and go to state 8
    CDOUBLE  shift, and go to state 9
    CSTRING  shift, and go to state 10
    CINT     shift, and go to state 11
    '['      shift, and go to state 12
    '{'      shift, and go to state 13
    '('      shift, and go to state 14

    CMD         go to state 88
    CMD_FOR     go to state 16
    CMD_LET     go to state 17
    CMD_IF      go to state 18
    LVALUE      go to state 19
    LVALUEPROP  go to state 20
    E           go to state 21


State 88

   10 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' CMD .

    $default  reduce using rule 10 (CMD_FOR)
